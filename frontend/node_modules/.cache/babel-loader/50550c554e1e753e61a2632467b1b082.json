{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  goals: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const createNote = createAsyncThunk('notes/create', async (noteData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await noteService.createNote(noteData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const noteSlice = createSlice({\n  name: 'note',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  }\n});\nexport const {\n  reset\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"sources":["/Users/ayush/notesss-app/frontend/src/notes/noteSlice.js"],"names":["createSlice","createAsyncThunk","initialState","goals","isError","isSuccess","isLoading","message","createNote","noteData","thunkAPI","token","getState","auth","user","noteService","error","response","data","toString","rejectWithValue","noteSlice","name","reducers","reset","state","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,SAAS,EAAE,KAJM;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CAAC,cAAD,EAAiB,OAAMQ,QAAN,EAAgBC,QAAhB,KAA6B;AACpF,MAAG;AACC,UAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAT,GAAoBC,IAApB,CAAyBC,IAAzB,CAA8BH,KAA5C;AACA,WAAO,MAAMI,WAAW,CAACP,UAAZ,CAAuBC,QAAvB,EAAiCE,KAAjC,CAAb;AAEH,GAJD,CAIC,OAAOK,KAAP,EAAc;AACb,UAAMT,OAAO,GACVS,KAAK,CAACC,QAAN,IACCD,KAAK,CAACC,QAAN,CAAeC,IADhB,IAECF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBX,OAFtB,IAGAS,KAAK,CAACT,OAHN,IAIAS,KAAK,CAACG,QAAN,EALF;AAMA,WAAOT,QAAQ,CAACU,eAAT,CAAyBb,OAAzB,CAAP;AACD;AACJ,CAdyC,CAAnC;AAgBP,OAAO,MAAMc,SAAS,GAAGrB,WAAW,CAAC;AAC/BsB,EAAAA,IAAI,EAAE,MADyB;AAE/BpB,EAAAA,YAF+B;AAG/BqB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAGC,KAAD,IAAWvB;AADZ;AAHqB,CAAD,CAA7B;AAQP,OAAO,MAAM;AAACsB,EAAAA;AAAD,IAAUH,SAAS,CAACK,OAA1B;AACP,eAAeL,SAAS,CAACM,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    goals: [],\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n}\n\nexport const createNote = createAsyncThunk('notes/create', async(noteData, thunkAPI) => {\n    try{\n        const token = thunkAPI.getState().auth.user.token \n        return await noteService.createNote(noteData, token)\n\n    }catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const noteSlice = createSlice({\n      name: 'note',\n      initialState,\n      reducers: {\n          reset: (state) => initialState\n      }\n})\n\nexport const {reset} = noteSlice.actions\nexport default noteSlice.reducer\n\n\n\n"]},"metadata":{},"sourceType":"module"}